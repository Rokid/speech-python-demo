# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='auth.proto',
  package='rokid.open.speech',
  syntax='proto2',
  serialized_pb=_b('\n\nauth.proto\x12\x11rokid.open.speech\"\x88\x01\n\x0b\x41uthRequest\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\x16\n\x0e\x64\x65vice_type_id\x18\x02 \x02(\t\x12\x11\n\tdevice_id\x18\x03 \x02(\t\x12\x0f\n\x07service\x18\x04 \x02(\t\x12\x0f\n\x07version\x18\x05 \x02(\t\x12\x11\n\ttimestamp\x18\x06 \x02(\t\x12\x0c\n\x04sign\x18\x07 \x02(\t\"@\n\x0c\x41uthResponse\x12\x30\n\x06result\x18\x01 \x02(\x0e\x32 .rokid.open.speech.AuthErrorCode*-\n\rAuthErrorCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0f\n\x0b\x41UTH_FAILED\x10\x01')
)

_AUTHERRORCODE = _descriptor.EnumDescriptor(
  name='AuthErrorCode',
  full_name='rokid.open.speech.AuthErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUTH_FAILED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=238,
  serialized_end=283,
)
_sym_db.RegisterEnumDescriptor(_AUTHERRORCODE)

AuthErrorCode = enum_type_wrapper.EnumTypeWrapper(_AUTHERRORCODE)
SUCCESS = 0
AUTH_FAILED = 1



_AUTHREQUEST = _descriptor.Descriptor(
  name='AuthRequest',
  full_name='rokid.open.speech.AuthRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rokid.open.speech.AuthRequest.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_type_id', full_name='rokid.open.speech.AuthRequest.device_type_id', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='rokid.open.speech.AuthRequest.device_id', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service', full_name='rokid.open.speech.AuthRequest.service', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='rokid.open.speech.AuthRequest.version', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='rokid.open.speech.AuthRequest.timestamp', index=5,
      number=6, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sign', full_name='rokid.open.speech.AuthRequest.sign', index=6,
      number=7, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=170,
)


_AUTHRESPONSE = _descriptor.Descriptor(
  name='AuthResponse',
  full_name='rokid.open.speech.AuthResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='rokid.open.speech.AuthResponse.result', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=236,
)

_AUTHRESPONSE.fields_by_name['result'].enum_type = _AUTHERRORCODE
DESCRIPTOR.message_types_by_name['AuthRequest'] = _AUTHREQUEST
DESCRIPTOR.message_types_by_name['AuthResponse'] = _AUTHRESPONSE
DESCRIPTOR.enum_types_by_name['AuthErrorCode'] = _AUTHERRORCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AuthRequest = _reflection.GeneratedProtocolMessageType('AuthRequest', (_message.Message,), dict(
  DESCRIPTOR = _AUTHREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:rokid.open.speech.AuthRequest)
  ))
_sym_db.RegisterMessage(AuthRequest)

AuthResponse = _reflection.GeneratedProtocolMessageType('AuthResponse', (_message.Message,), dict(
  DESCRIPTOR = _AUTHRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:rokid.open.speech.AuthResponse)
  ))
_sym_db.RegisterMessage(AuthResponse)


# @@protoc_insertion_point(module_scope)
